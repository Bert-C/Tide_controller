//-----------------------------------------------------
// Begin pasted section from R script "tide_extract_1site_harmonics_progmem.R"
// Selected station:  Monterey, Monterey Harbor, California 
// The 'datum' printed here is the difference between mean sea level and 
// mean lower low water for the NOAA station. These two values can be 
// found for NOAA tide reference stations on the tidesandcurrents.noaa.gov
//  site under the datum page for each station.
const float Datum = 2.8281 ; // units in feet
// Harmonic constant names: J1, K1, K2, L2, M1, M2, M3, M4, M6, M8, N2, 2N2, O1, OO1, P1, Q1, 2Q1, R2, S1, S2, S4, S6, T2, LDA2, MU2, NU2, RHO1, MK3, 2MK3, MN4, MS4, 2SM2, MF, MSF, MM, SA, SSA
// These names match the NOAA names, except LDA2 here is LAM2 on NOAA's site
// Amp scaled by 1000, divide by 1000 to convert to original float value
PROGMEM prog_uint16_t Amp[] = {71,1199,121,23,38,1616,0,0,0,0,368,44,753,36,374,134,16,3,33,428,0,0,22,11,41,72,26,0,0,0,0,0,0,0,0,157,90};
// Kappa scaled by 10, so divide by 10 to convert to original float value
PROGMEM prog_uint16_t Kappa[] = {2334,2198,1720,2202,2259,1811,0,0,0,0,1546,1239,2034,2502,2156,1951,1994,1802,3191,1802,0,0,1678,1807,1146,1611,1966,0,0,0,0,0,0,0,0,2060,2839};
// Speed is unscaled, stored as the original float values
typedef float PROGMEM prog_float_t; // Need to define this type before use
PROGMEM prog_float_t Speed[] = {15.58544,15.04107,30.08214,29.52848,14.49669,28.9841,43.47616,57.96821,86.95231,115.9364,28.43973,27.89535,13.94304,16.1391,14.95893,13.39866,12.85429,30.04107,15,30,60,90,29.95893,29.45563,27.96821,28.51258,13.47151,44.02517,42.92714,57.42383,58.9841,31.0159,1.098033,1.015896,0.5443747,0.0410686,0.0821373};
// Equilarg scaled by 100. Divide by 100 to get original value.
PROGMEM prog_uint16_t Equilarg[10][37] = { 
{17495,1851,21655,15782,23131,19425,29137,2850,22275,5700,4193,24962,17162,5364,34993,1930,22699,17692,18000,0,0,0,308,2959,2660,17891,15628,21276,999,23618,19425,16575,3101,16575,15232,28007,20013},
{27537,1770,21457,34814,15957,27019,22529,18038,9058,77,1609,12198,24892,33361,34919,35482,10072,17765,18000,0,0,0,235,28737,17891,7302,5175,28789,16269,28627,27019,8981,31235,8981,25410,28081,20162},
{2,1486,20897,18274,7278,1035,19553,2071,3106,4142,2753,4470,35316,22123,34943,1033,2751,17739,18000,0,0,0,261,19806,1982,265,34546,2521,585,3788,1035,34965,20404,34965,34283,28057,20115},
{8338,1130,20240,366,32299,11042,16563,22084,33126,8168,3886,32732,9858,10509,34967,2703,31549,17714,18000,0,0,0,286,10865,22064,29219,28036,12172,20954,14929,11042,24958,9325,24958,7155,28033,20067},
{16642,756,19561,18209,21144,21046,13569,6092,27139,12185,5019,24992,20431,34800,34990,4404,24377,17688,18000,0,0,0,312,1921,6144,22171,21556,21802,5336,26064,21046,14954,34184,14954,16027,28010,20019},
{26433,526,19135,196,10240,28618,6927,21236,13854,6472,2412,12206,28391,26062,34916,2185,11979,17761,18000,0,0,0,239,27677,21353,11559,11332,29144,20711,31030,28618,7381,25836,7381,26206,28083,20169},
{34975,287,18644,20217,4275,2641,3961,5282,7923,10564,3563,4485,2745,15047,34940,3665,4588,17735,18000,0,0,0,265,18753,5451,4529,4633,2928,4995,6204,2641,33359,15152,33359,35078,28060,20121},
{7692,158,18341,3983,31462,12683,1024,25365,2048,14731,4732,32782,12941,4542,34963,4991,33040,17710,18000,0,0,0,290,9847,25568,33519,33777,12841,25207,17415,12683,23317,4800,23317,7950,28037,20073},
{16567,137,18252,21135,20658,22747,34121,9494,32241,18988,5924,25102,23002,30487,34987,6180,25357,17684,18000,0,0,0,316,964,9708,26530,26786,22884,9357,28670,22747,13253,30742,13253,16823,28013,20025},
{26975,307,18562,1726,9025,30397,27595,24795,19192,13590,3396,12394,30424,23522,34913,3422,12421,17757,18000,0,0,0,243,26798,24995,15997,16024,30704,24488,33793,30397,5603,23549,5603,27001,28087,20175} 
 };

// Nodefactor scaled by 10000. Divide by 10000 to get original float value.
PROGMEM prog_uint16_t Nodefactor[10][37] = { 
{9491,9602,8878,11647,11232,10169,10257,10343,10519,10698,10169,10169,9349,7887,10000,9349,9349,10000,10000,10000,10000,10000,10000,10169,10169,10169,9349,9765,9931,10343,10169,10169,8592,10169,10577,10000,10000},
{8928,9234,8156,12048,8780,10271,10411,10552,10839,11134,10271,10271,8748,6334,10000,8748,8748,10000,10000,10000,10000,10000,10000,10271,10271,10271,8748,9485,9743,10552,10271,10271,7448,10271,10936,10000,10000},
{8492,8957,7680,10216,13201,10344,10520,10699,11067,11448,10344,10344,8290,5315,10000,8290,8290,10000,10000,10000,10000,10000,10000,10344,10344,10344,8290,9265,9583,10699,10344,10344,6642,10344,11190,10000,10000},
{8278,8824,7472,8780,15575,10377,10571,10768,11173,11594,10377,10377,8068,4868,10000,8068,8068,10000,10000,10000,10000,10000,10000,10377,10377,10377,8068,9156,9501,10768,10377,10377,6271,10377,11307,10000,10000},
{8343,8864,7533,9704,14048,10367,10556,10747,11141,11550,10367,10367,8135,5000,10000,8135,8135,10000,10000,10000,10000,10000,10000,10367,10367,10367,8135,9189,9526,10747,10367,10367,6381,10367,11272,10000,10000},
{8669,9068,7865,11656,9653,10315,10477,10641,10976,11323,10315,10315,8475,5711,10000,8475,8475,10000,10000,10000,10000,10000,10000,10315,10315,10315,8475,9354,9650,10641,10315,10315,6961,10315,11090,10000,10000},
{9176,9394,8458,12040,9343,10229,10345,10463,10702,10947,10229,10229,9011,6981,10000,9011,9011,10000,10000,10000,10000,10000,10000,10229,10229,10229,9011,9609,9829,10463,10229,10229,7936,10229,10783,10000,10000},
{9761,9782,9272,9582,16115,10117,10176,10235,10354,10475,10117,10117,9643,8745,10000,9643,9643,10000,10000,10000,10000,10000,10000,10117,10117,10117,9643,9897,10012,10235,10117,10117,9188,10117,10390,10000,10000},
{10336,10176,10225,7337,19813,9992,9989,9985,9977,9969,9992,9992,10279,10859,10000,10279,10279,10000,10000,10000,10000,10000,10000,9992,9992,9992,10279,10168,10160,9985,9992,9992,10571,9992,9955,10000,10000},
{10835,10529,11201,10649,15935,9870,9805,9741,9614,9489,9870,9870,10850,13090,10000,10850,10850,10000,10000,10000,10000,10000,10000,9870,9870,9870,10850,10391,10257,9741,9870,9870,11923,9870,9530,10000,10000} 
 };

// Define unix time values for the start of each year.
//                                      2012       2013       2014       2015       2016       2017       2018       2019       2020       2021
PROGMEM prog_uint32_t startSecs[] = {1325376000,1356998400,1388534400,1420070400,1451606400,1483228800,1514764800,1546300800,1577836800,1609459200};

// 1st year of data in the Equilarg/Nodefactor/startSecs arrays.
const unsigned int startYear = 2012;
//------------------------------------------------------------------
